# -*- coding: utf-8 -*-
"""Positional_Encoding.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/170wBCLKXtrnaG5EMszTFNipfpKPP6YZA
"""

import numpy as np

Text = [
    "The", "desire", "that", "guides",
    "me", "in", "all", "I", "do",
    "is", "the", "desire", "to", "harness", "the", "forces", "of",
    "nature", "to", "the", "service", "of", "mankind"
]
def positional_encoding(seq_len, dim):
    PE = np.zeros((seq_len, dim))
    for pos in range(seq_len):
        for i in range(0, dim, 2):
            angle = pos / (10000 ** ((2 * i) / dim))
            PE[pos, i] = np.sin(angle)
            if i + 1 < dim:
                PE[pos, i + 1] = np.cos(angle)
    return PE
seq_len = len(Text)
dim = 4
PE_matrix = positional_encoding(seq_len, dim)

for word, vec in zip(Text, PE_matrix):
    print(word , "=", [float(round(v, 2)) for v in vec])

import matplotlib.pyplot as plt

def positional_encoding(seq_len, d_model):
    PE = np.zeros((seq_len, d_model))
    for pos in range(seq_len):
        for i in range(0, d_model, 2):
            denominator = np.power(10000, (2 * i) / d_model)
            PE[pos, i] = np.sin(pos / denominator)
            if i + 1 < d_model:
                PE[pos, i+1] = np.cos(pos / denominator)
    return PE

seq_len = 200
d_model = 8

PE_matrix = positional_encoding(seq_len, d_model)

fig, axes = plt.subplots(1, 2, figsize=(12, 4))

positions = range(seq_len)

axes[0].plot(positions, PE_matrix[:, 0], label="Dim 0 (Sine)")
axes[0].plot(positions, PE_matrix[:, 1], label="Dim 1 (Cosine)")
axes[0].set_title("Low Frequency (Dim 0 & 1)")
axes[0].set_xlabel("Position")
axes[0].set_ylabel("Value")
axes[0].legend()
axes[0].grid(True)

axes[1].plot(positions, PE_matrix[:, 2], label="Dim 2 (Sine)")
axes[1].plot(positions, PE_matrix[:, 3], label="Dim 3 (Cosine)")
axes[1].set_title("Higher Frequency (Dim 2 & 3)")
axes[1].set_xlabel("Position")
axes[1].set_ylabel("Value")
axes[1].legend()
axes[1].grid(True)

plt.tight_layout()
plt.show()

"""=> Left (Dim 0 & 1) → Smooth sine & cosine waves (low frequency). They change slowly, so they help the model capture long-range patterns.
=> Right (Dim 2 & 3) → Faster oscillations (high frequency). They change quickly, helping the model capture fine-grained position differences.


"""

